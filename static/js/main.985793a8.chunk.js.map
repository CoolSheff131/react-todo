{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","useContext","removeTodo","toggleTodo","classes","completed","push","style","className","join","type","bind","id","checked","title","onClick","ul","listStyle","margin","TodoList","props","todos","map","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","console","log","Suspense","fallback","onCreate","concat","Date","now","Loader","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAGeA,EAFCC,IAAMC,gB,OCEhBC,EAAS,CACXC,GAAI,CACAC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,aACTC,OAAQ,iBACRC,aAAc,MACdC,aAAc,SAElBC,MAAO,CACHC,YAAa,SA8BNC,MA1Bf,YAA0C,IAAvBC,EAAsB,EAAtBA,KAAKC,EAAiB,EAAjBA,MACpB,GADqC,EAAVC,SACMC,qBAAWlB,IAArCmB,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,WACbC,EAAU,GAIhB,OAHGN,EAAKO,WACJD,EAAQE,KAAK,QAGb,qBAAIC,MAASrB,EAAOC,GAApB,UACI,uBAAMqB,UAAWJ,EAAQK,KAAK,KAA9B,UACI,uBAAOC,KAAK,WAAWH,MAAOrB,EAAOS,MAAOK,SAAUG,EAAWQ,KAAK,KAAKb,EAAKc,IAAKC,QAASf,EAAKO,YACnG,iCAASN,EAAQ,IAFrB,OAIKD,EAAKgB,SAGV,wBAAQC,QAASb,EAAWS,KAAK,KAAKb,EAAKc,IAAKJ,UAAU,KAA1D,sBC9BNtB,EAAS,CACX8B,GAAG,CACCC,UAAW,OACXC,OAAO,EACP3B,QAAS,IAmBF4B,MAhBd,SAAkBC,GACf,OACI,oBAAIb,MAAOrB,EAAO8B,GAAlB,SACMI,EAAMC,MAAMC,KAAI,SAACxB,EAAKC,GACpB,OAAO,cAAC,EAAD,CAAUD,KAAMA,EAAoBC,MAAOA,GAAhBD,EAAKc,UCZxC,oBAAI,sBAAKL,MAAO,CAACnB,QAAQ,OAAOC,eAAe,SAAS6B,OAAO,QAASV,UAAU,cAA9E,UAA4F,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,4B,4BCCnNe,G,kNACjBC,MAAQ,CACJC,QAAQ,G,4CAEZ,WAAS,IAAD,OACJ,OACI,eAAC,IAAMC,SAAP,WACI,wBAAQX,QAAS,kBAAK,EAAKY,SAAS,CAACF,QAAQ,KAA7C,wBACCG,KAAKJ,MAAMC,QACR,qBAAKjB,UAAU,QAAf,SACA,sBAAKA,UAAU,aAAf,UACI,8CACA,4CACA,wBAAQO,QAAS,kBAAK,EAAKY,SAAS,CAACF,QAAQ,KAA7C,qC,GAbWzC,IAAM6C,YCInCC,EAAU9C,IAAM+C,MAAK,kBAAI,IAAIC,SAAQ,SAAAC,GACzCC,YAAW,WACTD,EAAQ,gCACR,WAyDWE,MAvDf,WACE,MAA0BnD,IAAMoD,SAAS,IAAzC,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAA8BrD,IAAMoD,UAAS,GAA7C,mBAAOE,EAAP,KAAgBC,EAAhB,KAmCA,OAlCAC,qBAAU,WACRC,MAAM,uDACPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAArB,GACJa,YAAW,WACTG,EAAShB,GACTkB,GAAW,KACX,UAGF,IAyBA,cAAC,EAAQM,SAAT,CAAkBC,MAAO,CAAE5C,WAX7B,SAAoBU,GAClByB,EAAShB,EAAM0B,QAAO,SAAAjD,GAAI,OAAIA,EAAKc,KAAOA,OAUHT,WAvBzC,SAAoBS,GAClBoC,QAAQC,IAAIrC,GACZyB,EACGhB,EAAMC,KAAI,SAACxB,GAIZ,OAHIA,EAAKc,KAAOA,IACdd,EAAKO,WAAaP,EAAKO,WAElBP,QAgBT,SACA,sBAAKU,UAAU,UAAf,UACE,6CACA,cAAC,EAAD,IACA,cAAC,IAAM0C,SAAP,CAAgBC,SAAU,wCAA1B,SACE,cAACrB,EAAD,CAASsB,SAbf,SAAiBtC,GACfuB,EAAShB,EAAMgC,OAAO,CAAC,CACrBvC,QACAF,GAAI0C,KAAKC,MACTlD,WAAW,WAWViC,GAAU,cAACkB,EAAD,IACVnC,EAAMoC,OAAQ,cAAC,EAAD,CAAUpC,MAAOA,IAC9BiB,EAAS,KAAK,+CC/CPoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.985793a8.chunk.js","sourcesContent":["import React from 'react'\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, {useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction TodoItem({todo,index, onChange}){\r\n    const {removeTodo, toggleTodo} = useContext(Context)\r\n    const classes = []\r\n    if(todo.completed){\r\n        classes.push('done')\r\n    }\r\n    return(\r\n        <li style = {styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input type=\"checkbox\" style={styles.input} onChange={toggleTodo.bind(null,todo.id)} checked={todo.completed}/>\r\n                <strong>{index + 1}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n            \r\n            <button onClick={removeTodo.bind(null,todo.id)} className=\"rm\">&times;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    \r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\nconst styles = {\r\n    ul:{\r\n        listStyle: 'none',\r\n        margin:0,\r\n        padding: 0\r\n    }\r\n}\r\n function TodoList(props){\r\n    return(\r\n        <ul style={styles.ul}>\r\n            { props.todos.map((todo,index) =>{\r\n                return <TodoItem todo={todo} key={todo.id} index={index} ></TodoItem>\r\n            })}\r\n            \r\n            \r\n        </ul>\r\n    )\r\n    \r\n}\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    \r\n}\r\nexport default TodoList","import React from \"react\";\r\n\r\nexport default ()=><div style={{display:\"flex\",justifyContent:'center',margin:'5rem'}} className=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>","import React from \"react\";\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component{\r\n    state = {\r\n        isOpen: false\r\n    }\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={()=> this.setState({isOpen: true})}>Open Modal</button>\r\n                {this.state.isOpen && (\r\n                    <div className=\"modal\">\r\n                    <div className=\"modal-body\">\r\n                        <h1>Modal Header</h1>\r\n                        <p>lorem ipsum</p>\r\n                        <button onClick={()=> this.setState({isOpen: false})}>Close Modal</button>\r\n                    </div>\r\n                </div>\r\n                )}\r\n                \r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React,{useEffect} from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\n\nimport Loader from \"./Loader\";\nimport Modal from \"./Modal/Modal\";\n\nconst AddTodo = React.lazy(()=>new Promise(resolve =>{\n  setTimeout(()=>{\n    resolve(import('./Todo/AddTodo'))\n  },3000)\n}))\nfunction App() {\n  const [todos, setTodos] = React.useState([ ])\n  const [loading, setLoading] = React.useState(true)\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n  .then(response => response.json())\n  .then(todos => {\n    setTimeout(()=>{\n      setTodos(todos)\n      setLoading(false)\n    },2000)\n    \n  })\n  },[])\n\n  function toggleTodo(id) {\n    console.log(id);\n    setTodos(\n       todos.map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    })\n    );\n  }\n\n  function removeTodo(id){\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n  function addTodo(title){\n    setTodos(todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]))\n  }\n  return (\n    <Context.Provider value={{ removeTodo, toggleTodo}}>\n    <div className=\"wrapper\">\n      <h1> React TODO</h1>\n      <Modal/>\n      <React.Suspense fallback={<p>Loading</p>}>\n        <AddTodo onCreate={addTodo}/>\n      </React.Suspense>\n      {loading&& <Loader/>  }\n      {todos.length? <TodoList todos={todos}></TodoList>: (\n        loading? null:<p>No todos</p>\n      )}\n      \n    </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}